I have two working projects that I wish to integrate. I am inclined to use Node-Red to achieve this, but 
I am open to alternative suggestions.

The first project is operating wirelessly, but it can also be operated via a usb C wired connection to this 
Linux laptop:

	(Linux Infinitybook 6.11.0-118026-tuxedo #26~24.04.1tux1 SMP PREEMPT_DYNAMIC 
	Fri May 16 17:29:34 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux)

This project consists of two wirelessly connected parts. A Beagleconnect Freedom board, and BeaglePlay.
The BeagleConnect Freedom is responsible for streaming measured data to the BeaglePlay. The Beagleconnect
Freedom is described here:

	https://docs.beagle.cc/boards/beagleconnect/freedom/index.html	#And here
	https://www.beagleboard.org/boards/beagleconnect-freedom

The BeaglePlay is described here:

	https://www.beagleboard.org/boards/beagleplay #And here
	https://docs.beagleboard.org/boards/beagleplay/index.html

The BeagleConnect measures pH (acidity) via a Mikroe click board which is described here:

	https://www.mikroe.com/ezo-carrier-click-ph

It also measures atmospheric temperature and humidity via its own internal sensors and calculates Vapour 
Pressure Deficit (VPD) desribed here:

	https://en.wikipedia.org/wiki/Vapour-pressure_deficit #And here
	https://blog.ucs.org/carly-phillips	#See the Wildfires link

However, in a commercial greenhouse setting, this value of VPD does not take into account the temerature
at the "canopy". That is, the actual temperature at the leaves of a given crop. That is the purpose of my
second project. Again this project can operate wirelessly or via a usb C cable connected to this laptop.
The aim of this project is to use a MLX90640 thermal camera to measure temperature at the canopy and to 
use this value in the VPD calculation.

This second project uses an esp32s3 microcontroller described here:

	 https://unexpectedmaker.com/shop.html#!/FeatherS3/p/577111310

And an MLX90640 sensor board described here:

	https://shop.pimoroni.com/products/mlx90640-thermal-camera-breakout?variant=12536948654163

The sensor is connected to the esp32s3 via a STEMMA QT cable on LDO 1. The source code for this is 
located on my laptop here:

	/home/lio/github/esp/thermal_camera

The esp32s3 is written in C/C++ and is built, flashed and monitored using idf.py which is located here:

	/home/lio/github/esp/esp-idf

Once flashed, the esp32s3 can operate wirelessly as long as it has a dumb power supply.

If the laptop has been switched off or rebooted, it will be necsessary to initialise the esp-idf 
framework this is done has follows:

	cd /home/lio/github/esp/thermal_camera
	source ./export.sh
	idf.py set-target esp32s3

Then the thermal camera project is built as follows:

	Ensure the esp32s3 is using a wired connection via /dev/ttyACM0
	cd /home/lio/github/esp/thermal_camera
	idf.py build
	idf.py -p /dev/tty/ACM0 flash monitor

To program the BeaglePlay, it necessay to ssh onto the board using:

	ssh debian@beagleplay.local	#password is "temppwd"

There you will find a number of scripts, some of which are failed attempts, diagnostic scripts. The 
script resposible the collecting data from the Beagleconnect is "ph_web_server.py".

I'd like you  to do the following without writing any code to begin with:

1) Assess the quality of work done so far for both the esp32s3 and the BeaglePlay/Beagleconnect. You will
need to ssh onto the BeaglePlay to do this.
2) Remove any dead code or unused code, but only in the directories I have indicated
3) Produce a plan for integrating these projects such that: 

	VPD is calculated correctly
	A web-based dashboard is part of the plan with time series data and grafana
	Wireless operation is maintained
	Write tests where feasible

4) Check that you can initialise the esp-idf framework
5) Check that you can build, flash and monitor the esp32s3
