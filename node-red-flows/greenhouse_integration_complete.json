[
    {
        "id": "greenhouse_main",
        "type": "tab",
        "label": "Greenhouse Integration",
        "disabled": false,
        "info": "Complete integration flow for BeaglePlay and ESP32-S3 sensor data"
    },
    {
        "id": "beagleplay_http",
        "type": "http request",
        "z": "greenhouse_main",
        "name": "BeaglePlay Sensors",
        "method": "GET",
        "ret": "obj",
        "paytoformat": "ignore",
        "url": "http://beagleplay.local:8080/api/sensors",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 140,
        "y": 100,
        "wires": [["process_beagleplay"]]
    },
    {
        "id": "esp32_http",
        "type": "http request",
        "z": "greenhouse_main",
        "name": "ESP32-S3 Thermal",
        "method": "GET",
        "ret": "obj",
        "paytoformat": "ignore",
        "url": "http://192.168.1.176/thermal_data",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 140,
        "y": 200,
        "wires": [["process_thermal"]]
    },
    {
        "id": "timer_beagle",
        "type": "inject",
        "z": "greenhouse_main",
        "name": "Poll BeaglePlay",
        "props": [{"p": "payload"}, {"p": "topic", "vt": "str"}],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 60,
        "wires": [["beagleplay_http"]]
    },
    {
        "id": "timer_esp32",
        "type": "inject",
        "z": "greenhouse_main",
        "name": "Poll ESP32-S3",
        "props": [{"p": "payload"}, {"p": "topic", "vt": "str"}],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 160,
        "wires": [["esp32_http"]]
    },
    {
        "id": "process_beagleplay",
        "type": "function",
        "z": "greenhouse_main",
        "name": "Process BeaglePlay Data",
        "func": "// Process BeaglePlay sensor data\nconst data = msg.payload;\n\n// Extract sensor values\nconst temperature = data.temperature || 0;\nconst humidity = data.humidity || 0;\nconst pressure = data.pressure || 1013.25; // Default atmospheric pressure\nconst vpd = data.vpd || 0;\n\n// Calculate Enhanced VPD (improved formula)\nlet vpd_enhanced = 0;\nif (temperature > 0 && humidity > 0) {\n    const satVP = 0.6108 * Math.exp((17.27 * temperature) / (temperature + 237.3));\n    const actualVP = (humidity / 100) * satVP;\n    vpd_enhanced = satVP - actualVP;\n}\n\n// Create InfluxDB format\nconst influxData = [\n    {\n        measurement: \"beagleplay_sensors\",\n        tags: {\n            location: \"greenhouse\",\n            device: \"beagleplay\"\n        },\n        fields: {\n            temperature: temperature,\n            humidity: humidity,\n            pressure: pressure,\n            vpd: vpd,\n            vpd_enhanced: vpd_enhanced\n        },\n        timestamp: new Date()\n    }\n];\n\n// Send to InfluxDB\nreturn {payload: influxData};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 100,
        "wires": [["influxdb_out", "dashboard_split"]]
    },
    {
        "id": "process_thermal",
        "type": "function",
        "z": "greenhouse_main",
        "name": "Process Thermal Data",
        "func": "// Process ESP32-S3 thermal camera data\nconst data = msg.payload;\n\n// Check if thermal data is ready\nif (data.status === \"data_not_ready\" || !data.minTemp) {\n    // Return empty data or skip processing\n    return null;\n}\n\n// Create InfluxDB format using the actual field names\nconst influxData = [\n    {\n        measurement: \"thermal_camera\",\n        tags: {\n            location: \"greenhouse\",\n            device: \"esp32s3\"\n        },\n        fields: {\n            min_temp: data.minTemp || 0,\n            max_temp: data.maxTemp || 0,\n            mean_temp: data.meanTemp || 0,\n            median_temp: data.medianTemp || 0,\n            range_temp: data.rangeTemp || 0,\n            mode_temp: data.modeTemp || 0,\n            std_dev_temp: data.stdDevTemp || 0\n        },\n        timestamp: new Date()\n    }\n];\n\n// Send to InfluxDB\nreturn {payload: influxData};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 200,
        "wires": [["influxdb_out", "thermal_split"]]
    },
    {
        "id": "dashboard_split",
        "type": "function",
        "z": "greenhouse_main",
        "name": "Split Dashboard Data",
        "func": "// Split the data for different dashboard components\nconst data = msg.payload[0].fields;\n\n// Send each measurement separately\nreturn [\n    {payload: data.temperature, topic: \"temperature\"},\n    {payload: data.humidity, topic: \"humidity\"},\n    {payload: data.pressure, topic: \"pressure\"},\n    {payload: data.vpd, topic: \"vpd\"},\n    {payload: data.vpd_enhanced, topic: \"vpd_enhanced\"}\n];",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 100,
        "wires": [["dashboard_temp"], ["dashboard_humidity"], ["dashboard_pressure"], ["dashboard_vpd"], ["dashboard_vpd_enhanced"]]
    },
    {
        "id": "thermal_split",
        "type": "function",
        "z": "greenhouse_main",
        "name": "Split Thermal Data",
        "func": "// Split thermal data for dashboard\nif (!msg.payload || !msg.payload[0] || !msg.payload[0].fields) {\n    // No valid data, return null\n    return null;\n}\n\nconst data = msg.payload[0].fields;\n\n// Return all thermal statistics\nreturn [\n    {payload: data.min_temp, topic: \"min_temp\"},\n    {payload: data.max_temp, topic: \"max_temp\"},\n    {payload: data.mean_temp, topic: \"mean_temp\"},\n    {payload: data.median_temp, topic: \"median_temp\"},\n    {payload: data.range_temp, topic: \"range_temp\"},\n    {payload: data.mode_temp, topic: \"mode_temp\"},\n    {payload: data.std_dev_temp, topic: \"std_dev_temp\"}\n];",
        "outputs": 7,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 200,
        "wires": [["dashboard_thermal_min"], ["dashboard_thermal_max"], ["dashboard_thermal_mean"], ["dashboard_thermal_median"], ["dashboard_thermal_range"], ["dashboard_thermal_mode"], ["dashboard_thermal_stddev"]]
    },
    {
        "id": "influxdb_out",
        "type": "influxdb out",
        "z": "greenhouse_main",
        "influxdb": "influxdb_config",
        "name": "InfluxDB",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "measurementV18FluxV20": "",
        "bucket": "sensors",
        "org": "greenhouse",
        "x": 600,
        "y": 300,
        "wires": []
    },
    {
        "id": "dashboard_temp",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "Air Temperature",
        "group": "environmental_group",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Air Temperature",
        "label": "Â°C",
        "format": "{{value | number:4}}",
        "min": 10,
        "max": 40,
        "colors": ["#1f77b4","#2ca02c","#d62728"],
        "seg1": 20,
        "seg2": 30,
        "className": "",
        "x": 800,
        "y": 40,
        "wires": []
    },
    {
        "id": "dashboard_humidity",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "Humidity",
        "group": "environmental_group",
        "order": 2,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Humidity",
        "label": "%",
        "format": "{{value | number:4}}",
        "min": 20,
        "max": 90,
        "colors": ["#d62728","#2ca02c","#1f77b4"],
        "seg1": 40,
        "seg2": 70,
        "className": "",
        "x": 800,
        "y": 80,
        "wires": []
    },
    {
        "id": "dashboard_pressure",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "Atmospheric Pressure",
        "group": "environmental_group",
        "order": 3,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Atmospheric Pressure",
        "label": "hPa",
        "format": "{{value | number:4}}",
        "min": 980,
        "max": 1040,
        "colors": ["#d62728","#2ca02c","#d62728"],
        "seg1": 1000,
        "seg2": 1020,
        "className": "",
        "x": 800,
        "y": 120,
        "wires": []
    },
    {
        "id": "dashboard_vpd",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "VPD Original",
        "group": "vpd_group",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "VPD (Original)",
        "label": "kPa",
        "format": "{{value | number:4}}",
        "min": 0,
        "max": 2.5,
        "colors": ["#2ca02c","#ff7f0e","#d62728"],
        "seg1": 0.8,
        "seg2": 1.5,
        "className": "",
        "x": 800,
        "y": 160,
        "wires": []
    },
    {
        "id": "dashboard_vpd_enhanced",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "VPD Enhanced",
        "group": "vpd_group",
        "order": 2,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "VPD (Enhanced)",
        "label": "kPa",
        "format": "{{value | number:4}}",
        "min": 0,
        "max": 2.5,
        "colors": ["#2ca02c","#ff7f0e","#d62728"],
        "seg1": 0.8,
        "seg2": 1.5,
        "className": "",
        "x": 800,
        "y": 200,
        "wires": []
    },
    {
        "id": "dashboard_thermal_min",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "Thermal Min",
        "group": "thermal_group",
        "order": 1,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Min Temp",
        "label": "Â°C",
        "format": "{{value | number:4}}",
        "min": 0,
        "max": 35,
        "colors": ["#1f77b4","#1f77b4","#2ca02c"],
        "seg1": 15,
        "seg2": 25,
        "className": "",
        "x": 800,
        "y": 240,
        "wires": []
    },
    {
        "id": "dashboard_thermal_max",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "Thermal Max",
        "group": "thermal_group",
        "order": 2,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Max Temp",
        "label": "Â°C",
        "format": "{{value | number:4}}",
        "min": 0,
        "max": 45,
        "colors": ["#1f77b4","#2ca02c","#d62728"],
        "seg1": 20,
        "seg2": 35,
        "className": "",
        "x": 800,
        "y": 280,
        "wires": []
    },
    {
        "id": "dashboard_thermal_mean",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "Thermal Mean",
        "group": "thermal_group",
        "order": 3,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Mean Temp",
        "label": "Â°C",
        "format": "{{value | number:4}}",
        "min": 0,
        "max": 40,
        "colors": ["#1f77b4","#2ca02c","#d62728"],
        "seg1": 18,
        "seg2": 30,
        "className": "",
        "x": 800,
        "y": 320,
        "wires": []
    },
    {
        "id": "dashboard_thermal_median",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "Thermal Median",
        "group": "thermal_group",
        "order": 4,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Median Temp",
        "label": "Â°C",
        "format": "{{value | number:4}}",
        "min": 0,
        "max": 40,
        "colors": ["#1f77b4","#2ca02c","#d62728"],
        "seg1": 18,
        "seg2": 30,
        "className": "",
        "x": 800,
        "y": 360,
        "wires": []
    },
    {
        "id": "dashboard_thermal_range",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "Thermal Range",
        "group": "thermal_group",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Range Temp",
        "label": "Â°C",
        "format": "{{value | number:4}}",
        "min": 0,
        "max": 30,
        "colors": ["#2ca02c","#ff7f0e","#d62728"],
        "seg1": 10,
        "seg2": 20,
        "className": "",
        "x": 800,
        "y": 400,
        "wires": []
    },
    {
        "id": "dashboard_thermal_mode",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "Thermal Mode",
        "group": "thermal_group",
        "order": 6,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Mode Temp",
        "label": "Â°C",
        "format": "{{value | number:4}}",
        "min": 0,
        "max": 40,
        "colors": ["#1f77b4","#2ca02c","#d62728"],
        "seg1": 18,
        "seg2": 30,
        "className": "",
        "x": 800,
        "y": 440,
        "wires": []
    },
    {
        "id": "dashboard_thermal_stddev",
        "type": "ui_gauge",
        "z": "greenhouse_main",
        "name": "Thermal StdDev",
        "group": "thermal_group",
        "order": 7,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Std Dev Temp",
        "label": "Â°C",
        "format": "{{value | number:4}}",
        "min": 0,
        "max": 10,
        "colors": ["#2ca02c","#ff7f0e","#d62728"],
        "seg1": 3,
        "seg2": 6,
        "className": "",
        "x": 800,
        "y": 480,
        "wires": []
    },
    {
        "id": "influxdb_config",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "sensors",
        "name": "Local InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "environmental_group",
        "type": "ui_group",
        "name": "Environmental Sensors",
        "tab": "greenhouse_tab",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": "nr-dashboard-theme ui-card-panel"
    },
    {
        "id": "vpd_group",
        "type": "ui_group",
        "name": "VPD Monitoring",
        "tab": "greenhouse_tab",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": "nr-dashboard-theme ui-card-panel"
    },
    {
        "id": "thermal_group",
        "type": "ui_group",
        "name": "Thermal Camera",
        "tab": "greenhouse_tab",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": "nr-dashboard-theme ui-card-panel"
    },
    {
        "id": "greenhouse_tab",
        "type": "ui_tab",
        "name": "Greenhouse",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]